#include <iostream>
#include <SFML/Graphics.hpp>
#include <SFML/System/Export.hpp>
#include <SFML/System/Time.hpp>
#include <iostream>
#include <fstream>
#include "board.h"
#include"player.h"
#include "ghost.h"
using namespace std;
using namespace sf;
void main()
{
	RenderWindow window;
	window.create(VideoMode(1000, 1000), "PacMan");
	board maze("normalBlock.png", "Blue.jpg", "pallet.png", "powerP.png");
	maze.readArrayFromFile("Board.txt");
	maze.setBoardTextures();
	player player1("pacman", "Pacman.png", 1, 1);
	ghost ghostBlinky("Blinky", "Blinky.png", 9, 9);
	ghost ghostPinky("Pinky", "Pinky.jpg", 10, 10);
	ghost ghostInky("Inky", "Inky.jpg", 10, 9);
	ghost ghostClyde("Clyde", "Clyde.jpg", 10, 11);
	Texture pall, ppall;
	pall.loadFromFile("pallet.png");//p
	ppall.loadFromFile("powerP.png");// powerp
	char direction;
	Event e;
	while (window.isOpen())
	{
		while (window.pollEvent(e))
		{
			if (e.type == Event::Closed)
				window.close();
			else if (e.type == Event::KeyPressed)
			{
				switch (e.key.code)
				{
				case Keyboard::Up:
					direction = 'U';
					break;
				case Keyboard::Down:
					direction = 'D';
					break;
				case Keyboard::Right:
					direction = 'R';
					break;
				case Keyboard::Left:
					direction = 'L';
					break;
				}//move(0,1)
				Clock clk;
				ghostBlinky.moveGhost(maze.array);
				ghostPinky.moveGhost(maze.array);
				bool clydeCanmove = false;
				if (player1.getScore() >= 200)
				{
					ghostInky.moveGhost(maze.array);
					if (clydeCanmove == false)
						clk.restart();
					clydeCanmove = true;
				}
				if ((clk.getElapsedTime().asSeconds() > 8) && clydeCanmove)
					ghostClyde.moveGhost(maze.array);
				if (direction == 'U')
				{
					player1.movePlayer('U', maze.array, maze.arrayOfEmptyPlaces);

					if ((ghostBlinky.getGhostRow() == player1.getPlayerRow()) && (ghostBlinky.getGhostColumn() == player1.getPlayerColumn()) ||
						(ghostPinky.getGhostRow() == player1.getPlayerRow()) && (ghostPinky.getGhostColumn() == player1.getPlayerColumn()) ||
						(ghostInky.getGhostRow() == player1.getPlayerRow()) && (ghostInky.getGhostColumn() == player1.getPlayerColumn()) ||
						(ghostClyde.getGhostRow() == player1.getPlayerRow()) && (ghostClyde.getGhostColumn() == player1.getPlayerColumn()))
					{
						player1.ifEaten(1, 1);
						player1.reduceLife();
					}

					if (maze.getBoard1CellTexture(player1.getPlayerRow(), player1.getPlayerColumn()) == pallett || maze.getBoard1CellTexture(player1.getPlayerRow(), player1.getPlayerColumn()) == powerpall)

					{
						maze.textureAfterPalyerMoves(player1.getPlayerRow(), player1.getPlayerColumn());
						player1.addNumberofPoints(maze.array, maze.arrayOfEmptyPlaces);
					}
				}
			}
		}
		maze.drawBoardonWindow(window);
		player1.drawPlayerOnWindow(window);
		window.display();
	}
}
